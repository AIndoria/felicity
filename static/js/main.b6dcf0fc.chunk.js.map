{"version":3,"sources":["scripts/Flicker.js","scripts/utils.js","scripts/FlickerText.js","Card.js","Landing.js","index.js"],"names":["Flicker","min","max","delay","characters","getRandomInt","Math","floor","random","randomCharacter","length","replaceAt","text","character","index","substr","init","str","cb","props","children","bank","newStr","trim","i","mix","origStr","done","setTimeout","this","eachPromise","arr","iterator","extraArgs","promiseReducer","prev","current","idx","then","Array","from","reduce","Promise","resolve","cloneElement","element","tag","type","obj","keys","res","key","indexOf","exclude","Date","now","React","createElement","cloneElementWithSpecifiedText","textLines","cloneElementWithSpecifiedTextAtIndex","textIdx","recurse","el","child","advIdx","isValidElement","Children","map","isArray","FlickerText","state","typeAllLines","lines","linesToType","typeLine","line","lineIdx","mounted","flicker","s","setState","concat","slice","stack","pop","forEach","push","unshift","extractTextFromElement","Tag","tagName","className","innerTree","Component","defaultProps","Card","style","color","dayNightMode","usdrate","gbprate","eurrate","jpyrate","hkdrate","inrrate","countryColor","countryname","currencyName","alternativeChars","Landing","useState","mode","setMode","americanRate","setAmericanRate","euRate","setEuRate","gbpRate","setGbpRate","jpyRate","setJpyRate","hkdRate","setHkdRate","inrRate","setInrRate","loadRates","fetch","json","data","rates","console","log","catch","loadJPRates","loadGBRates","loadHKRates","loadINRates","loadEURates","useEffect","setInterval","id","backgroundColor","onClick","alt","href","USD","GBP","EUR","JPY","HKD","INR","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6dcf0fc.chunk.js","sourcesContent":["export const defaultCharacters =\n  \"█▓▒░█▓▒░█▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\";\nexport default class Flicker {\n  constructor(min, max, delay, characters) {\n    this.min = min;\n    this.max = max;\n    this.delay = delay;\n    this.characters = characters;\n  }\n\n  getRandomInt = (min, max) =>\n    Math.floor(Math.random() * (max - min + 1)) + min;\n\n  randomCharacter = () =>\n    this.characters[Math.floor(Math.random() * this.characters.length)];\n\n  replaceAt = (text, character, index) =>\n    text.substr(0, index) + character + text.substr(index + character.length);\n\n  init = (str, cb) => {\n    if (str.props) {\n      if (typeof str.props.children !== \"string\") {\n        return str;\n      }\n      str = str.props.children;\n    }\n    str = str.trim();\n    const bank = [];\n    let done = 1;\n    const newStr = str;\n\n    for (let i = 0; i < str.length; i++) {\n      bank[i] = this.getRandomInt(this.min, this.max);\n    }\n    this.mix(str, str, newStr, done, bank, this.delay, cb);\n  };\n\n  mix = (origStr, str, newStr, done, bank, delay, cb) => {\n    for (let i = 0; i < str.length; i++) {\n      if (bank[i] !== 0) {\n        done = 0;\n        if (str[i] !== \" \") {\n          newStr = this.replaceAt(newStr, this.randomCharacter(), i);\n        } else {\n          newStr = this.replaceAt(newStr, \" \", i);\n        }\n        bank[i]--;\n      } else {\n        newStr = this.replaceAt(newStr, str[i], i);\n      }\n    }\n\n    origStr = newStr;\n    if (done === 0 && str !== newStr) {\n      setTimeout(() => {\n        return this.mix(origStr, str, newStr, done, bank, delay, cb);\n      }, delay);\n    }\n    cb(origStr);\n  };\n}\n","/**\n * @see https://github.com/jstejada/react-typist/blob/master/src/utils.js\n */\nimport React from \"react\";\n\nexport function extractTextFromElement(element) {\n  const stack = element ? [element] : [];\n  const lines = [];\n\n  while (stack.length > 0) {\n    const current = stack.pop();\n    if (React.isValidElement(current)) {\n      React.Children.forEach(current.props.children, (child) => {\n        stack.push(child);\n      });\n    } else if (Array.isArray(current)) {\n      for (const el of current) {\n        stack.push(el);\n      }\n    } else {\n      lines.unshift(current);\n    }\n  }\n\n  return lines;\n}\n\nexport function eachPromise(arr, iterator, ...extraArgs) {\n  const promiseReducer = (prev, current, idx) =>\n    prev.then(() => iterator(current, idx, ...extraArgs));\n  return Array.from(arr).reduce(promiseReducer, Promise.resolve());\n}\n\nexport function exclude(obj, keys) {\n  const res = {};\n  for (const key in obj) {\n    if (keys.indexOf(key) === -1) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\nexport function cloneElement(element, children) {\n  const tag = element.type;\n  const props = exclude(element.props, [\"children\"]);\n  // eslint-disable-next-line\n  props.key = `Typist-element-${tag}-${\n    Date.now() + Math.random() + Math.random()\n  }`;\n  return React.createElement(tag, props, ...children);\n}\n\nfunction cloneElementWithSpecifiedTextAtIndex(element, textLines, textIdx) {\n  if (textIdx >= textLines.length) {\n    return [null, textIdx];\n  }\n\n  let idx = textIdx;\n  const recurse = (el) => {\n    const [child, advIdx] = cloneElementWithSpecifiedTextAtIndex(\n      el,\n      textLines,\n      idx\n    );\n    idx = advIdx;\n    return child;\n  };\n\n  const isNonTypistElement = React.isValidElement(element);\n\n  if (isNonTypistElement) {\n    const clonedChildren =\n      React.Children.map(element.props.children, recurse) || [];\n    return [cloneElement(element, clonedChildren), idx];\n  }\n\n  if (Array.isArray(element)) {\n    const children = element.map(recurse);\n    return [children, idx];\n  }\n\n  // Anything that isn't a React element or an Array is interpreted as text\n  return [textLines[idx], idx + 1];\n}\n\nexport function cloneElementWithSpecifiedText({ element, textLines }) {\n  if (!element) {\n    return undefined;\n  }\n\n  return cloneElementWithSpecifiedTextAtIndex(element, textLines, 0)[0];\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Flicker, { defaultCharacters } from \"./Flicker\";\nimport {\n  extractTextFromElement,\n  eachPromise,\n  cloneElementWithSpecifiedText,\n} from \"./utils\";\n\n/**\n * Some of this code has been taken from jstejada/react-typist\n * @see https://github.com/jstejada/react-typist/blob/master/src/Typist.jsx\n */\n\nexport default class FlickerText extends React.Component {\n  static propTypes = {\n    tagName: PropTypes.string.isRequired,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    delay: PropTypes.number,\n    characters: PropTypes.string,\n  };\n\n  static defaultProps = {\n    tagName: \"span\",\n    min: 1,\n    max: 10,\n    delay: 100,\n    characters: defaultCharacters,\n  };\n\n  state = {\n    textLines: [],\n  };\n\n  constructor(props) {\n    super(props);\n    const { min, max, delay, characters } = props;\n    this.flicker = new Flicker(min, max, delay, characters);\n    this.mounted = false;\n    this.linesToType = [];\n\n    if (props.children) {\n      this.linesToType = extractTextFromElement(props.children);\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const { children } = this.props;\n    if (children) {\n      this.typeAllLines();\n    }\n  }\n\n  typeAllLines = (lines = this.linesToType) =>\n    eachPromise(lines, this.typeLine);\n\n  typeLine = (line, lineIdx) => {\n    if (!this.mounted) {\n      return Promise.resolve();\n    }\n\n    const { min, max, delay } = this.props;\n    this.flicker.init(line, (s) => {\n      this.setState({ textLines: this.state.textLines.concat([\"\"]) }, () => {\n        const textLines = this.state.textLines.slice();\n        textLines[lineIdx] = s;\n        this.setState({ textLines });\n      });\n    });\n  };\n\n  render() {\n    const Tag = this.props.tagName;\n    const props = { ...this.props };\n\n    delete props.tagName;\n    delete props.className;\n    const innerTree = cloneElementWithSpecifiedText({\n      element: this.props.children,\n      textLines: this.state.textLines,\n    });\n\n    return <Tag>{innerTree}</Tag>;\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./stylesheets/card.css\";\nimport { mode } from \"./Landing\";\nimport Flicker from \"./scripts/Flicker\";\nimport FlickerText from \"./scripts/FlickerText\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"Card\">\n        <div\n          className=\"Card__Listings\"\n          style={{ color: this.props.dayNightMode }}\n        >\n          <p>\n            USD:<span>{this.props.usdrate}</span>{\" \"}\n          </p>\n          <p>\n            GBP:<span>{this.props.gbprate}</span>{\" \"}\n          </p>\n          <p>\n            EUR:<span>{this.props.eurrate}</span>{\" \"}\n          </p>\n          <p>\n            JPY:<span>{this.props.jpyrate}</span>{\" \"}\n          </p>\n          <p>\n            HKD:<span>{this.props.hkdrate}</span>{\" \"}\n          </p>\n          <p>\n            INR:<span>{this.props.inrrate}</span>{\" \"}\n          </p>\n        </div>\n        <div className=\"Card__Title\">\n          <div className={this.props.countryColor}>\n            <FlickerText>{this.props.countryname}</FlickerText>\n          </div>\n          <div\n            className=\"card_countryCurrency\"\n            style={{ color: this.props.dayNightMode }}\n          >\n            <FlickerText>{this.props.currencyName}</FlickerText>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport \"./stylesheets/Landing.scss\";\nimport Card from \"./Card\";\nimport Flicker from \"./scripts/Flicker\";\nimport FlickerText from \"./scripts/FlickerText\";\n\nconst alternativeChars =\n  \"!\\\"#$%'()*+,-./0123456789:;?@`aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ{[|}]~^_\";\n\nfunction Landing() {\n  const [mode, setMode] = useState(\"dark\");\n  const [americanRate, setAmericanRate] = useState([]);\n  const [euRate, setEuRate] = useState([]);\n  const [gbpRate, setGbpRate] = useState([]);\n  const [jpyRate, setJpyRate] = useState([]);\n  const [hkdRate, setHkdRate] = useState([]);\n  const [inrRate, setInrRate] = useState([]);\n\n  function colorToggle() {\n    setMode((mode) => {\n      if (mode === \"dark\") {\n        return \"light\";\n      } else {\n        return \"dark\";\n      }\n    });\n  }\n\n  useEffect(() => {\n    loadRates();\n    loadEURates();\n    loadJPRates();\n    loadINRates();\n    loadHKRates();\n    loadGBRates();\n    setInterval(() => {\n      //disabled while testing\n      loadRates();\n      loadEURates();\n      loadJPRates();\n      loadINRates();\n      loadHKRates();\n      loadGBRates();\n    }, 300000);\n  }, []);\n\n  function loadRates() {\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=USD&symbols=USD,EUR,GBP,JPY,INR,HKD\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setAmericanRate(data.rates);\n        console.log(data.rates);\n      })\n      .catch(console.log);\n  }\n\n  function loadJPRates() {\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=JPY&symbols=USD,EUR,GBP,JPY,INR,HKD\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setJpyRate(data.rates);\n        console.log(data.rates);\n      })\n      .catch(console.log);\n  }\n\n  function loadGBRates() {\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=GBP&symbols=USD,EUR,GBP,JPY,INR,HKD\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setGbpRate(data.rates);\n        console.log(data.rates);\n      })\n      .catch(console.log);\n  }\n\n  function loadHKRates() {\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=HKD&symbols=USD,EUR,GBP,JPY,INR,HKD\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setHkdRate(data.rates);\n        console.log(data.rates);\n      })\n      .catch(console.log);\n  }\n\n  function loadINRates() {\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=INR&symbols=USD,EUR,GBP,JPY,INR,HKD\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setInrRate(data.rates);\n        console.log(data.rates);\n      })\n      .catch(console.log);\n  }\n\n  function loadEURates() {\n    fetch(\"https://api.exchangeratesapi.io/latest?symbols=USD,GBP,JPY,INR,HKD\")\n      .then((res) => res.json())\n      .then((data) => {\n        setEuRate(data.rates);\n        console.log(data.rates);\n      })\n\n      .catch(console.log);\n  }\n\n  return (\n    <div\n      className=\"Landing\"\n      id=\"root\"\n      style={{ backgroundColor: mode === \"light\" ? \"white\" : \"#1c1917\" }}\n    >\n      <div\n        className=\"Header__Logo\"\n        style={{ color: mode === \"light\" ? \"black\" : \"#d7d7d7\" }}\n      >\n        <div className=\"Header__Logo-top\">INDORIA LABS</div>\n        <div className=\"Header__Logo-bottom\">NORTH AMERICA</div>\n        <div className=\"Header__Logo-short\">ILNA</div>\n      </div>\n      <div\n        className=\"Header__Title\"\n        style={{ color: mode === \"light\" ? \"black\" : \"#8ee3f8\" }}\n      >\n        <div className=\"Header__Title-main\">FELICITY</div>\n        <div className=\"Header__Title-sub\">Current Currency Exchange Rates</div>\n      </div>\n      <div className=\"Header__DNC\">\n        <input type=\"checkbox\" onClick={colorToggle}></input>\n      </div>\n      <div className=\"Description\">\n        <div\n          className=\"Description__Text\"\n          style={{ color: mode === \"light\" ? \"#2e2e2e\" : \"#d7d7d7\" }}\n        >\n          <FlickerText characters={alternativeChars}>\n            Access real-time rates for all the major FX pairs. Rates are accessd\n            from\n          </FlickerText>{\" \"}\n          <a\n            alt=\"European Central Bank Link\"\n            href=\"https://www.ecb.europa.eu\"\n            style={{ color: mode === \"light\" ? \"#015c3a\" : \"#90ee90\" }}\n          >\n            European Central Bank\n          </a>{\" \"}\n          <FlickerText characters={alternativeChars}>\n            and are updated every five(5) minutes. Currently, major currency\n            pairs are USD, GBP, EUR, JPY, HKD, and INR.\n          </FlickerText>\n        </div>\n      </div>\n      <div className=\"CurrencyCards\">\n        <Card\n          dayNightMode={mode === \"light\" ? \"#2e2e2e\" : \"white\"}\n          countryColor=\"countryStyleUS\"\n          countryname=\"UNITED STATES\"\n          currencyName=\"United States Dollar\"\n          usdrate={americanRate.USD}\n          gbprate={americanRate.GBP}\n          eurrate={americanRate.EUR}\n          jpyrate={americanRate.JPY}\n          hkdrate={americanRate.HKD}\n          inrrate={americanRate.INR}\n        ></Card>\n        <Card\n          dayNightMode={mode === \"light\" ? \"#2e2e2e\" : \"white\"}\n          countryColor=\"countryStyleEU\"\n          countryname=\"EUROPEAN UNION\"\n          currencyName=\"Euro\"\n          usdrate={euRate.USD}\n          gbprate={euRate.GBP}\n          eurrate=\"1\"\n          jpyrate={euRate.JPY}\n          hkdrate={euRate.HKD}\n          inrrate={euRate.INR}\n        ></Card>\n        <Card\n          dayNightMode={mode === \"light\" ? \"#2e2e2e\" : \"white\"}\n          countryColor={mode === \"light\" ? \"countryStyleDAY\" : \"countryStyleJP\"}\n          countryname=\"JAPAN\"\n          currencyName=\"Japanese Yen\"\n          usdrate={jpyRate.USD}\n          gbprate={jpyRate.GBP}\n          eurrate={jpyRate.EUR}\n          jpyrate={jpyRate.JPY}\n          hkdrate={jpyRate.HKD}\n          inrrate={jpyRate.INR}\n        ></Card>\n        <Card\n          dayNightMode={mode === \"light\" ? \"#2e2e2e\" : \"white\"}\n          countryColor=\"countryStyleHK\"\n          countryname=\"HONG KONG\"\n          currencyName=\"Hong Kong Dollar\"\n          usdrate={hkdRate.USD}\n          gbprate={hkdRate.GBP}\n          eurrate={hkdRate.EUR}\n          jpyrate={hkdRate.JPY}\n          hkdrate={hkdRate.HKD}\n          inrrate={hkdRate.INR}\n        ></Card>\n        <Card\n          dayNightMode={mode === \"light\" ? \"#2e2e2e\" : \"white\"}\n          countryColor=\"countryStyleUK\"\n          countryname=\"UNITED KINGDOM\"\n          currencyName=\"Pound Sterling\"\n          usdrate={gbpRate.USD}\n          gbprate={gbpRate.GBP}\n          eurrate={gbpRate.EUR}\n          jpyrate={gbpRate.JPY}\n          hkdrate={gbpRate.HKD}\n          inrrate={gbpRate.INR}\n        ></Card>\n        <Card\n          dayNightMode={mode === \"light\" ? \"#2e2e2e\" : \"white\"}\n          countryColor=\"countryStyleIN\"\n          countryname=\"INDIA\"\n          currencyName=\"Indian Rupee\"\n          usdrate={inrRate.USD}\n          gbprate={inrRate.GBP}\n          eurrate={inrRate.EUR}\n          jpyrate={inrRate.JPY}\n          hkdrate={inrRate.HKD}\n          inrrate={inrRate.INR}\n        ></Card>\n      </div>\n      <div className=\"animation\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.css\";\nimport Landing from \"./Landing\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Landing />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}